package me.cutrats110;

import java.util.HashMap;
import java.util.List;

import org.bukkit.Bukkit;
import org.bukkit.entity.Player;
import org.bukkit.plugin.Plugin;
import org.bukkit.scoreboard.DisplaySlot;
import org.bukkit.scoreboard.Objective;
import org.bukkit.scoreboard.Scoreboard;

public class TeamBoards {
	public Plugin plugin = null;
	public TeamBoards(Plugin plugin){
		this.plugin = plugin;
	}
	private HashMap<String, Scoreboard> boards = new HashMap<>();
	
	//Make scoreboard should be called when team is created...
	public void makeScoreBoard (String teamName) {
		try {
			Scoreboard board = Bukkit.getScoreboardManager().getNewScoreboard();	
			
			
			Objective teamMembersBoard = board.registerNewObjective("teamhp", "dummy","hp");	
			teamMembersBoard.setDisplaySlot(DisplaySlot.SIDEBAR);
			teamMembersBoard.setDisplayName("  Team Health  ");		
			
			boards.put(teamName, board);
		}catch(NullPointerException np) {
			plugin.getLogger().info("Erroor in makeBoard " + np.getStackTrace());
			np.printStackTrace();
		}
	}
	
	//Some bug with random team creations...
	public void setScoreboard(List<Player> players, String teamName) {
		try {
			Scoreboard teamBoard = boards.get(teamName);
			Objective teamMembersBoard = teamBoard.getObjective("teamhp");
			if(players != null) {
				for(Player p : players){//Team members only...
					try {
						if(p.isOnline()) {
							if( (int)p.getHealth() >= 20) {
								teamMembersBoard.getScore(p.getName()).setScore((int) (p.getHealth()));
							}else {
								teamMembersBoard.getScore(p.getName()).setScore((int) (p.getHealth()+1));
							}
						}
					}catch(NullPointerException np) {continue;}
				}
				for(Player p : players){//Team members only...
					p.setScoreboard(teamBoard);
				}
			}
		}catch(Exception er) {
			plugin.getLogger().info("Error setting scoreboard ");
			er.printStackTrace();
		}
	}
	public void setScoreboard(List<Player> players, String teamName, Player updatedPlayer, int health) {
		
		Scoreboard teamBoard = boards.get(teamName);
		Objective teamMembersBoard = teamBoard.getObjective("teamhp");
		
		for(Player p : players){//Team members only...
			try {
				if(p.isOnline()) {
					if(p != updatedPlayer) {
						teamMembersBoard.getScore(p.getName()).setScore((int) p.getHealth());
					}else {
						teamMembersBoard.getScore(updatedPlayer.getName()).setScore(health);
					}
				}
			}catch(NullPointerException np) {continue;}
		}
		for(Player p : players){//Team members only...
			try {
				if(p.isOnline()) {
					p.setScoreboard(teamBoard);	
				}
			}catch(NullPointerException np) {continue;}
		}
	}
}
